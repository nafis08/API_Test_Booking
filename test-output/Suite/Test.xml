<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="nazmusnafis" failures="4" tests="32" name="Test" time="22.973" errors="0" timestamp="2025-06-26T00:04:41 CEST">
  <testcase classname="test.java.GetToken" name="createToken" time="1.745"/>
  <testcase classname="test.java.CreateBooking" name="createBooking" time="0.867"/>
  <testcase classname="test.java.CreateBooking" name="createBooking" time="0.556"/>
  <testcase classname="test.java.CreateBooking" name="createBooking" time="0.544"/>
  <testcase classname="test.java.UpdateBooking" name="updateAllBookings" time="2.231"/>
  <testcase classname="test.java.PartialUpdateBooking" name="partialUpdateBooking" time="1.66"/>
  <testcase classname="test.java.DeleteBooking" name="deleteBooking" time="1.658"/>
  <testcase classname="test.java.NegativeTestsForCreateToken" name="createToken_InvalidPassword_ShouldFail" time="0.546"/>
  <testcase classname="test.java.NegativeTestsForCreateToken" name="createToken_InvalidUsername_ShouldReturn403" time="0.542"/>
  <testcase classname="test.java.NegativeTestsForCreateToken" name="createToken_MissingPassword_ShouldReturnError" time="0.547"/>
  <testcase classname="test.java.SecurityTestsForBookingCreation" name="createBooking_SQLInjectionAttempt_ShouldBeHandledSafely" time="0.543"/>
  <testcase classname="test.java.SecurityTestsForBookingCreation" name="createBooking_XSSAttempt_ShouldNotExecuteScript" time="0.554">
    <failure type="java.lang.AssertionError" message="Wrong type of JSON expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: Wrong type of JSON expected [false] but found [true]
at test.java.SecurityTestsForBookingCreation.createBooking_XSSAttempt_ShouldNotExecuteScript(SecurityTestsForBookingCreation.java:51)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- createBooking_XSSAttempt_ShouldNotExecuteScript -->
  <testcase classname="test.java.SecurityTestsForGetToken" name="createToken_SQLInjectionAttempt_ShouldFail" time="0.541"/>
  <testcase classname="test.java.SecurityTestsForGetToken" name="createToken_WithoutContentTypeHeader_ShouldFailGracefully" time="0.543"/>
  <testcase classname="test.java.SecurityTestsForGetToken" name="createToken_XSSInjection_ShouldBeHandled" time="0.543"/>
  <testcase classname="test.java.NegativeTestsForDeleteBooking" name="deleteBooking_InvalidId_ShouldReturn404" time="0.545"/>
  <testcase classname="test.java.NegativeTestsForDeleteBooking" name="deleteBooking_Twice_ShouldFailSecondTime" time="0.547">
    <failure type="java.lang.AssertionError" message="First deletion failed. expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: First deletion failed. expected [true] but found [false]
at test.java.NegativeTestsForDeleteBooking.deleteBooking_Twice_ShouldFailSecondTime(NegativeTestsForDeleteBooking.java:62)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- deleteBooking_Twice_ShouldFailSecondTime -->
  <testcase classname="test.java.NegativeTestsForDeleteBooking" name="deleteBooking_WithoutToken_ShouldFail" time="0.539"/>
  <testcase classname="test.java.NegativeTestForBookingCreation" name="createBooking_EmptyBody_ShouldFail" time="0.541"/>
  <testcase classname="test.java.NegativeTestForBookingCreation" name="createBooking_InvalidJsonFormat_ShouldFail" time="0.545"/>
  <testcase classname="test.java.NegativeTestForBookingCreation" name="createBooking_InvalidPriceType_ShouldFail" time="0.541">
    <failure type="java.lang.AssertionError" message="Expected failure due to invalid data type. Got: 200 expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: Expected failure due to invalid data type. Got: 200 expected [true] but found [false]
at test.java.NegativeTestForBookingCreation.createBooking_InvalidPriceType_ShouldFail(NegativeTestForBookingCreation.java:42)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- createBooking_InvalidPriceType_ShouldFail -->
  <testcase classname="test.java.NegativeTestForBookingCreation" name="createBooking_MissingFirstName_ShouldFail" time="0.541"/>
  <testcase classname="test.java.NegativeTestForGetBookingDetails" name="getBooking_InvalidIdFormat_ShouldReturn404" time="0.55"/>
  <testcase classname="test.java.NegativeTestForGetBookingDetails" name="getBooking_NonExistingId_ShouldReturn404" time="0.542"/>
  <testcase classname="test.java.SecurityTestForGetBookingDetails" name="getBooking_XSSInjection_ShouldFail" time="0.547"/>
  <testcase classname="test.java.SecurityTestForDeleteBooking" name="deleteBooking_InvalidToken_ShouldBeForbidden" time="0.539"/>
  <testcase classname="test.java.SecurityTestForDeleteBooking" name="deleteBooking_XSSAttempt_ShouldNotSucceed" time="0.547"/>
  <testcase classname="test.java.GetBookingIDList" name="getBookingIDs" time="0.573"/>
  <testcase classname="test.java.NegativeTestsForUpdateBooking" name="partialUpdateWithInvalidJson" time="0.544"/>
  <testcase classname="test.java.NegativeTestsForUpdateBooking" name="partialUpdateWithoutToken" time="0.543"/>
  <testcase classname="test.java.NegativeTestsForGetBookingId" name="getBookingIds_InvalidCheckinFormat_ShouldReturnEmptyList" time="0.542">
    <failure type="java.lang.AssertionError" message="Expected empty list for invalid date format. expected [0] but found [56]">
      <![CDATA[java.lang.AssertionError: Expected empty list for invalid date format. expected [0] but found [56]
at test.java.NegativeTestsForGetBookingId.getBookingIds_InvalidCheckinFormat_ShouldReturnEmptyList(NegativeTestsForGetBookingId.java:28)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- getBookingIds_InvalidCheckinFormat_ShouldReturnEmptyList -->
  <testcase classname="test.java.GetBookingDetails" name="getBookingDetails" time="0.548"/>
</testsuite> <!-- Test -->
